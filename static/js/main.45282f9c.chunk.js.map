{"version":3,"sources":["assets/my-pic.jpg","components/header/Header.js","components/home/Home.js","components/common/Card.js","repos_api.js","components/projects/Projects.js","components/contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","href","Home","id","src","myPic","alt","className","Card","title","description","icons","repo_url","project_url","iconsComponents","map","name","i","key","icon","color","size","console","log","split","join","Projects","state","repos","fetch","headers","Accept","then","res","json","setState","filter","repo","checkRepo","_","find","repos_api","reposCards","this","topics","html_url","Component","Contact","url","contact","App","Boolean","window","location","hostname","match","library","add","fab","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45282f9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my-pic.4ef32352.jpg\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <a href=\"#home\">Home</a>\r\n                <a href=\"#projects\">Projects</a>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Home.css'\r\nimport myPic from '../../assets/my-pic.jpg';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <section id=\"home\">\r\n            <h1>Suliman Alhabib</h1>\r\n            <p>a full-stack web developer</p>\r\n            <img src={myPic} alt=\"personal\"/>\r\n            <div className=\"intro-container\">\r\n            <p>\r\n                Welcome to my portfolio<br/>\r\n                I'm a web developer, my hands-on the latest technologies in web development Writing well designed, testable, efficient code by using best software development practices. With hands-on innovative, enthusiasm, commitment to development and staying-up-to-date with the latest in my field, I am seeking a role at a growing organization to boost its productivity & development with a team.\r\n            </p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Card.css';\r\nconst Card = ({ title, description, icons, repo_url, project_url }) => {\r\n  const iconsComponents = icons.map((name, i) => (\r\n    <FontAwesomeIcon \r\n    key={i} \r\n    icon={['fab', name]} \r\n    color='#fff'\r\n    size='2x'\r\n    title={name} />\r\n  ));\r\n  console.log(iconsComponents);\r\n  return (\r\n    <div className=\"card\">\r\n      <p className=\"title\">{title.split('-').join(' ')}</p>\r\n      <p>{description}</p>\r\n      <div className=\"icons-container\">\r\n        {iconsComponents}\r\n      </div>\r\n      <div className=\"project-links\">\r\n        \r\n        {project_url ? <a href={project_url}>Show</a> : null}\r\n        <a href={repo_url}>Github</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default [\r\n{\r\n    id: 184456317,\r\n},\r\n{\r\n    id: 162199333,\r\n},\r\n{\r\n    id: 198098807,\r\n    project_url: \"https://loaner-1.herokuapp.com/\"\r\n},\r\n{\r\n    id: 202238682,\r\n    project_url: \"https://suldev8.github.io/meme-maker\"\r\n},\r\n{\r\n    id: 177447278,\r\n    project_url: \"https://suldev8.github.io/memory-game/\"\r\n},\r\n{\r\n    id: 189936565,\r\n    project_url: \"https://suldev8.github.io/restaurant-reviews-app/\"\r\n},\r\n{\r\n    id: 194093998,\r\n    project_url: \"https://suldev8.github.io/tic-tac-toe/\"\r\n},\r\n{\r\n    id: 139003699,\r\n},\r\n{\r\n    id: 207286192,\r\n    project_url: \"https://expo.io/@mansour789/WeAreWithYou\"\r\n},\r\n]","import React, { Component } from 'react';\r\nimport Card from '../common/Card';\r\nimport './Projects.css';\r\nimport repos_api from '../../repos_api';\r\nimport _ from 'lodash';\r\n\r\nclass Projects extends Component {\r\n  state = { repos: [] };\r\n\r\n  componentDidMount() {\r\n    fetch('https://api.github.com/users/suldev8/repos?per_page=40&sort=created', {\r\n      headers: { Accept: 'application/vnd.github.mercy-preview+json' }\r\n    })\r\n      .then(res => res.json())\r\n      .then(repos =>\r\n        this.setState({\r\n          repos: repos.filter(repo => {\r\n            const checkRepo = _.find(repos_api, {id : repo.id});\r\n              console.log(checkRepo);\r\n            if(checkRepo){\r\n              repo.project_url = checkRepo.project_url;\r\n              return true;\r\n            } else {\r\n              return false;\r\n            }\r\n          })\r\n        })\r\n      );\r\n  }\r\n  render() {\r\n    const { repos } = this.state;\r\n    const reposCards = repos.map(repo => (\r\n      <Card\r\n        title={repo.name}\r\n        description={repo.description}\r\n        icons={repo.topics}\r\n        repo_url={repo.html_url}\r\n        project_url={repo.project_url}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <section id=\"projects\">\r\n        <h1>Projects</h1>\r\n        <div className=\"cards-container\">{reposCards}</div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Contact.css';\r\n\r\n\r\nconst Contact = () => {\r\n    const contact_data = [\r\n        {\r\n            name: 'linkedin',\r\n            url: 'https://www.linkedin.com/in/sulaiman-alhabib/'\r\n        },\r\n        {\r\n            name: 'github',\r\n            url: 'https://www.linkedin.com/in/sulaiman-alhabib/'\r\n        },\r\n    ]\r\n    const iconsComponents = contact_data.map((contact, i) => (\r\n        <a href={contact.url}>\r\n            <FontAwesomeIcon \r\n            key={i} \r\n            icon={['fab', contact.name]} \r\n            color='#fff'\r\n            size='2x'\r\n            title={contact.name} />\r\n        </a>\r\n      ));\r\n    return (\r\n        <footer>\r\n            <a href=\"mailto:suldev8@gmail.com\">suldev8@gmail.com</a>\r\n            <div className=\"icons-container\">\r\n            {iconsComponents}\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\nimport Header from './components/header/Header';\nimport Home from './components/home/Home';\nimport Projects from './components/projects/Projects';\nimport Contact from './components/contact/Contact';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n      <Projects />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons'; \n\nlibrary.add(fab)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}